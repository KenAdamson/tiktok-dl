name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
      - name: Test with pytest
        run: |
          pytest

  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: List Files
        run: ls -R
      - name: Build Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.10"
          spec: |
            ${{ matrix.os == 'windows-latest' && './tiktok-downloader.spec' || 'main.py' }}
          requirements: "requirements.txt"
          upload_exe_with_name: "TikTok Downloader - ${{ matrix.os }}"
          options: --onefile, --name "TikTokDownloader", --windowed
